1. Install Symfony
$ composer create-project symfony/website-skeleton EasyAdmin


============================================================================
2. Install Easy Admin (composer require easycrop/easyadmin-bundle)
$ composer require admin



=============================================================================
3. Make User
$ bin/console make:user

 The name of the security user class (e.g. User) [User]:
 >

 Do you want to store user data in the database (via Doctrine)? (yes/no) [yes]:
 >

 Enter a property name that will be the unique "display" name for the user (e.g. email, username, uuid) [email]:
 >

 Will this app need to hash/check user passwords? Choose No if passwords are not needed or will be checked/hashed by some other system (e.g. a single sign-on server).

 Does this app need to hash/check user passwords? (yes/no) [yes]:
 >

 created: src/Entity/User.php
 created: src/Repository/UserRepository.php
 updated: src/Entity/User.php
 updated: config/packages/security.yaml


  Success!


 Next Steps:
   - Review your new App\Entity\User class.
   - Use make:entity to add more fields to your User entity and then run make:migration.
   - Create a way to authenticate! See https://symfony.com/doc/current/security.html

=============================================================================
Add a security bundle: https://symfony.com/doc/current/security.html
---------------------------------------------------------
$ bin/console -- alias (php bin/console ...)
$ bin/console http://localhost:8000/api/{?doc}
---------------------------------------------------------

$ composer require symfony/security-bundle
4. Make Auth (Login)
$ bin/console make:auth

 What style of authentication do you want? [Empty authenticator]:
  [0] Empty authenticator
  [1] Login form authenticator
 > 1

 The class name of the authenticator to create (e.g. AppCustomAuthenticator):
 > CustomAuth

 Choose a name for the controller class (e.g. SecurityController) [SecurityController]:
 >

 Do you want to generate a '/logout' URL? (yes/no) [yes]:
 >

 created: src/Security/CustomAuthAuthenticator.php
 updated: config/packages/security.yaml
 created: src/Controller/SecurityController.php
 created: templates/security/login.html.twig


  Success!


 Next:
 - Customize your new authenticator.
 - Finish the redirect "TODO" in the App\Security\CustomAuthAuthenticator::onAuthenticationSuccess() method.
 - Review & adapt the login template: templates/security/login.html.twig.

========================================================
Configure connection to database environment in .env :
# IMPORTANT: You MUST configure your server version, either here or in config/packages/doctrine.yaml
DATABASE_URL=mysql://root:@127.0.0.1:3306/symfony_easy_admin

$ bin/console doctrine:database:create
$ bin/console doctrine:schema:update --force

 Updating database schema...

     1 query was executed


 [OK] Database schema updated successfully!


=============================================================================
Install Security Encode Password
$ bin/console security:encode-password

Symfony Password Encoder Utility
================================

 Type in your password to be encoded:
 >

 ------------------ ---------------------------------------------------------------------------------------------------
  Key                Value
 ------------------ ---------------------------------------------------------------------------------------------------
  Encoder used       Symfony\Component\Security\Core\Encoder\MigratingPasswordEncoder
  Encoded password   $argon2id$v=19$m=65536,t=4,p=1$VuB/gPijTc9Ci7id3/3rMA$G6xtrHyyG1OyucE7gmU3GOyAX5XDOm/VFFaw7a2mRUg
 ------------------ ---------------------------------------------------------------------------------------------------

 ! [NOTE] Self-salting encoder used: the encoder generated its own built-in salt.


 [OK] Password encoding succeeded

==========================================================================
In /config/packages/security.yaml Uncomment for access control list :
access_control:
         #- { path: ^/admin, roles: ROLE_ADMIN }
         #- { path: ^/profile, roles: ROLE_USER }

To :

access_control:
         - { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
         - { path: ^/, roles: IS_AUTHENTICATED_FULLY }


=====================================================================
Debug Router for Obtain  all availables routes
$ bin/console debug:router

 -------------------------- -------- -------- ------ -----------------------------------
  Name                       Method   Scheme   Host   Path
 -------------------------- -------- -------- ------ -----------------------------------
  _preview_error             ANY      ANY      ANY    /_error/{code}.{_format}
  _wdt                       ANY      ANY      ANY    /_wdt/{token}
  _profiler_home             ANY      ANY      ANY    /_profiler/
  _profiler_search           ANY      ANY      ANY    /_profiler/search
  _profiler_search_bar       ANY      ANY      ANY    /_profiler/search_bar
  _profiler_phpinfo          ANY      ANY      ANY    /_profiler/phpinfo
  _profiler_search_results   ANY      ANY      ANY    /_profiler/{token}/search/results
  _profiler_open_file        ANY      ANY      ANY    /_profiler/open
  _profiler                  ANY      ANY      ANY    /_profiler/{token}
  _profiler_router           ANY      ANY      ANY    /_profiler/{token}/router
  _profiler_exception        ANY      ANY      ANY    /_profiler/{token}/exception
  _profiler_exception_css    ANY      ANY      ANY    /_profiler/{token}/exception.css
  app_login                  ANY      ANY      ANY    /login
  app_logout                 ANY      ANY      ANY    /logout
  easyadmin                  ANY      ANY      ANY    /admin/
 -------------------------- -------- -------- ------ -----------------------------------
 ==============================================================================
 Configuration Package Easy Admin :
 config/packages/easy_admin.yaml
 #easy_admin:
 #    entities:
 #        # List the entity class name you want to manage
 #        - App\Entity\Product
 #        - App\Entity\Category
 #        - App\Entity\User

config/routes/easy_admin.yaml
   easy_admin_bundle:
       resource: '@EasyAdminBundle/Controller/EasyAdminController.php'
       prefix: /admin # rename to dashboard, or backend
       type: annotation
